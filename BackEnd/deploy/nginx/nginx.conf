# nginx配置文件
# compose/nginx/nginx.conf

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# 配置http请求，80端口
server {
    listen 80; # 监听80端口
    server_name 127.0.0.1; # 可以是nginx容器所在ip地址或127.0.0.1，不能写宿主机外网ip地址

    charset utf-8;
    client_max_body_size 10M; # 限制用户上传文件大小

    access_log /var/log/nginx/nginx_access.log main;
    error_log /var/log/nginx/nginx_error.log warn;

    # 开户gzip压缩，效果相当明显 adminlte.min.css原来1.31M可以压缩到133K
    gzip on;
    #不压缩临界值，大于1K的才压缩，一般不用改
    gzip_min_length 1k;
    #buffer，就是，嗯，算了不解释了，不用改
    gzip_buffers 4 16k;
    #用了反向代理的话，末端通信是HTTP/1.0,默认是HTTP/1.1
    #gzip_http_version 1.0;
    #压缩级别，1-10，数字越大压缩的越好，时间也越长，看心情随便改吧
    gzip_comp_level 4;
    #进行压缩的文件类型，缺啥补啥就行了，JavaScript有两种写法，最好都写上吧，总有人抱怨js文件没有压缩，其实多写一种格式application/javascript 就行了
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    #跟Squid等缓存服务有关，on的话会在Header里增加"Vary: Accept-Encoding"
    gzip_vary off;
    #IE6对Gzip不怎么友好，不给它Gzip了
    gzip_disable "MSIE [1-6]\.";

    # 静态资源路径
    location /static {
        alias /usr/share/nginx/html/static;
    }
    # 媒体资源，用户上传文件路径
    location /media {
        alias /usr/share/nginx/html/media;
    }
    # 网站图标
    location = /favicon.ico {
        alias /usr/share/nginx/html/static;
    }
    # 禁止爬虫
    location = /robots.txt {
        default_type text/html;
        add_header Content-Type "text/plain; charset=UTF-8";
        return 200 "User-Agent: *\nDisallow: /";
    }
    # websocket
    location /ws {
        proxy_pass   http://fastapi:8000/ws;
        proxy_http_version 1.1;
        proxy_read_timeout   3600s;
        proxy_send_timeout   3600s;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    # 接口
    location /api/v1 {
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header   Host             $http_host;
        proxy_set_header   X-Nginx-Proxy    true;
        proxy_pass         http://fastapi:8000/api/v1;
    }
    location / {
        root  /usr/share/nginx/html/dist; # 路径改成自己的dist路径
        try_files $uri $uri/ /index.html;
        index  index.html index.htm;
    }
}